name: Python Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  # replace with your package name
  PYTHON_PACKAGE_NAME: example_pyo3_mixed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Log into registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

    - name: Build wheels
      run: |
        docker run --rm -v "$PWD:/io" \
          docker.pkg.github.com/colin-daniels/maturin-docker/maturin:0.8.3-1.48.0 \
          build \
          --manylinux=2010 \
          --bindings=pyo3 \
          --out dist

    - uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist
        if-no-files-found: error

  test:
    # Build wheels before testing
    needs: build

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.5', '3.6', '3.7', '3.8', '3.9']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install test dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Download previously built wheels
      uses: actions/download-artifact@v2
      with:
        name: dist

    - name: Install and test
      run: |
        # install from the previously built wheels
        pip install --find-links=dist "$PYTHON_PACKAGE_NAME"
        pytest
